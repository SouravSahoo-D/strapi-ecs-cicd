name: Deploy to ECS

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  ECR_REGISTRY: 607700977843.dkr.ecr.us-east-2.amazonaws.com
  ECR_REPOSITORY: strapi-app-ecs-pg

jobs:
  terraform-deploy:
    name: Deploy with Terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4
      - name: Setup Terraform Credentials
        run: |
          mkdir -p ~/.terraform.d
          echo '{"credentials": {"app.terraform.io": {"token": "${{ secrets.TF_API_TOKEN }}"}}}' > ~/.terraform.d/credentials.tfrc.json

      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          terraform plan
          
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve

      - name: Register New Task Definition
        id: register
        run: |
          TASK_DEF=$(aws ecs register-task-definition \
            --cli-input-json file://taskdef.json \
            --region $AWS_REGION)
          echo "$TASK_DEF" > taskdef-response.json
          TASK_ARN=$(echo "$TASK_DEF" | jq -r '.taskDefinition.taskDefinitionArn')
          echo "TASK_DEF_ARN=$TASK_ARN" >> $GITHUB_ENV

      - name: Generate appspec.yaml
        working-directory: ${{ github.workspace }}
        run: |
          sed "s|TASK_DEFINITION_ARN|$TASK_DEF_ARN|g" appspec-template.yaml > appspec.yaml

      - name: Trigger CodeDeploy Deployment
        run: |
          aws deploy create-deployment \
          --application-name strapi-codedeploy-app \
          --deployment-group-name strapi-deploy-group \
          --deployment-config-name CodeDeployDefault.ECSCanary10Percent5Minutes \
          --region $AWS_REGION \
          --description "Blue/Green deploy triggered by GitHub Actions" \
          --revision "{
            \"revisionType\": \"AppSpecContent\",
            \"appSpecContent\": {
              \"content\": \"$(cat appspec.yaml | base64 | tr -d '\n')\",
              \"sha256\": \"\"
            }
          }"
